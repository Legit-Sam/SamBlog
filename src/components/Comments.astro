---
import { sanityClient } from 'sanity:client';
import { formatDate } from '../libs/formatDate';

const { postId } = Astro.props;

interface Comment {
  name: string;
  email: string;
  content: string;
  createdAt: string;
}

const comments = await sanityClient.fetch(
  `*[_type == "comment" && post._ref == $postId && isApproved == true] | order(createdAt desc){
_id,
name,
content,
createdAt,

}`,
  { postId }
);
---
<div class="md:self-start md:justify-self-center md:pt-10 lg:w-4/5 xl:w-3/4 mb-6">
  <label class="block text-lg font-semibold text-gray-800 mb-4">Recent Comments</label>
  {
    comments.length === 0 ? (
      <p>No comments yet. Be the first to comment</p>
    ) : (
      <ul class="max-h-[calc(3*5rem)] lg:max-h-[calc(3*6rem)] lg:overflow-y-auto lg:scrollbar-hide w-full p-4 border border-white rounded-lg">
        {comments.map((comment: Comment, index: number) => (
          <li  class="mb-4 pb-4 border-b border-gray-300 last:border-b-0">
            <p class="font-semibold text-gray-800 mb-2">
              <span class="font-normal text-gray-600">Name: </span>{comment.name}
            </p>
            <p class="mt-2 text-gray-700 mb-2">
              <span class="font-normal text-gray-600">Comment: </span>{comment.content}
            </p>
            <p class="text-sm text-gray-500 mb-2">
              <span class="font-normal text-gray-600">Date: </span>{formatDate(comment.createdAt)}
            </p>
          </li>
        ))}
      </ul>
    )
  }
</div>






